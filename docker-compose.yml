version: "3"
services:

  ## Redis Service Configuration
  redis:
    image: redis
    ports:
    - "6379:6379"
    volumes:
    - "/opt/docker/redis_data:/data"
    deploy:
      placement:
        constraints: [node.role == manager]
    command: redis-server --appendonly yes

  ## MySql Service Configuration
  db:
    image: mysql:8.0.15
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS} #export to the value to shell
      MYSQL_DATABASE: mrworking
    volumes:
    - "/opt/docker/mysql_data:/var/lib/mysql"
    ports:
    - "3306:3306"

  ## ProcessMaker Service Configuration
  process_maker:
    image: eltercera/docker-processmaker
    volumes:
    - "/opt/docker/process_maker/shared:/opt/pm/processmaker/shared"
    ports:
    - "8080:80"
    links:
    - db:mysql

  ## Application service configuration
  api:
    image: mrworking-api:dev
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 100M
      restart_policy:
        condition: on-failure
    depends_on:
    - redis
    - db
    - process_maker
    links:
    - redis:redis
    - db:db
    ports:
    - "9003:9003"
    env_file:
    - .env
    environment:
    - REDIS_HOST=redis
    - DB_HOST=db

## Volumes for persisting data
#volumes:
#  mysql_data:
#  redis_data:
#  pm_shared_data:
#  pm_config_data: